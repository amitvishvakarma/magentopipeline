<?php /** * CedCommerce * * NOTICE OF LICENSE * * This source file is subject to the End User License Agreement (EULA) * that is bundled with this package in the file LICENSE.txt. * It is also available through the world-wide-web at this URL: * https://cedcommerce.com/license-agreement.txt * * @category Ced * @package Ced_ConnectBase * @author CedCommerce Core Team <connect@cedcommerce.com> * @copyright Copyright CedCommerce (https://cedcommerce.com/) * @license https://cedcommerce.com/license-agreement.txt */ use Ced\ConnectBase\Block\Adminhtml\Attribute\Fetch; /** @var Fetch $block */ $total = $block->totalBatches; $categoryIdsToFetchAttributes = $block->categoryIdsToFetchAttributes; $baseUrl = $block->getUrl('*/*/index'); $successImg = $block->getViewFileUrl('Ced_ConnectBase::images/fam_bullet_success.svg'); $errorImg = $block->getViewFileUrl('Ced_ConnectBase::images/fam_bullet_error.svg'); $loaderImg = $block->getViewFileUrl('Ced_ConnectBase::images/rule-ajax-loader.gif'); ?> <div class="row"><div class="col-md-12" style="margin-top: 10px;"><div class="panel panel-default"><div class="block-content panel-body "><div id="connectbase-progress-bar"></div><br> <div id="batches"><div class="batches-tab" data-role="collapsible"><div data-role="trigger"><span>Responses</span> <span id="category_ids_to_fetch_attributes" hidden><?= /* @noEscape */ json_encode($categoryIdsToFetchAttributes); ?></span></div></div><div class="batches-content" data-role="content"><ul id="profileRows" style="list-style: none;"><li style="list-style: none;"><?= /* @noEscape */ 'Total ' . $total . ' Batch(s) Found.'; ?></li> <li style="list-style: none;" id="updateRow"><img id="statusImage" src="<?= /* @noEscape */ $loaderImg ?>"><span id="updateStatus" class="text"><?= /* @noEscape */ __("Updating..."); ?></span></li> <li id="liFinished" style="display:none; list-style: none;"><?= /* @noEscape */ __("Finished Attribute Fetch."); ?></li></ul></div></div></div></div></div></div><style> #batches { border: 1px solid #ddd; border-radius: 0; } .batches-tab { background: #eee; padding: 1rem; cursor: pointer; font-weight: bold; & :first-child { border-bottom: 1px solid #ddd; } & :nth-last-child(2) { border-top: 1px solid #ddd; } } .batches-content { padding: 0.5rem 0.5rem; } /*li*/ #batches ul { list-style: none; padding: 0; margin: 0; } #batches ul li { vertical-align: middle; padding: 2px 2px 2px 2px; font: normal 12px sans-serif; font-size: small; } #batches li img { vertical-align: middle; margin-right: 5px; max-width: 12px; } #batches span { vertical-align: middle; }</style><script>
    require([
            'jquery',
            'jquery/ui',
            'accordion',
            'lineProgressbar'
        ],
        function ($) {
            var progressedPercentage = 0;
            $("#connectbase-progress-bar").LineProgressbar({
                percentage: 0,
                fillBackgroundColor: '#77a21b',
                height: '25px',
                progressBarWidth: progressedPercentage
            });

            $(".batch-container").accordion({collapsible: true, active: false});

            var totalRecords = parseInt("<?= /* @noEscape */ (int)$total; ?>");
            var countOfSuccess = 0;
            var id = 0;
            var liFinished = document.getElementById('liFinished');
            var updateStatus = document.getElementById('updateStatus');
            var updateRow = document.getElementById('updateRow');
            var statusImage = document.getElementById('statusImage');

            
            sendRequest();


            function sendRequest() {
                
                $("#connectbase-progress-bar").LineProgressbar({
                    percentage: parseInt(((id + 0.5) / totalRecords) * 100),
                    fillBackgroundColor: '#77a21b',
                    height: '35px',
                    progressBarWidth: progressedPercentage
                });
                progressedPercentage = parseInt(((id + 0.5) / totalRecords) * 100);

                updateStatus.innerHTML = (id + 1) + ' Of ' + totalRecords + ' Processing';
                var category_ids_to_fetch_attributes = $("#category_ids_to_fetch_attributes").text();
                var request = $.ajax({
                    type: "GET",
                    url: "<?= /* @noEscape */$block->getAjaxUrl();?>",
                    data: {
                        category_ids_to_fetch_attributes: category_ids_to_fetch_attributes,
                        batchid: id
                    },
                    success: function (data) {
                        var json = data;
                        id++;
                        var span = document.createElement('li');
                        if (json.hasOwnProperty('success')) {
                            countOfSuccess++;
                            span.innerHTML =
                                '<img src="<?=  /* @noEscape */ $successImg ?>"><span>' +
                                json.success + '</span>';
                            span.id = 'id-' + id;
                            updateRow.parentNode.insertBefore(span, updateRow);
                        } else if (json.hasOwnProperty('error')) {
                            countOfSuccess++;
                            span.innerHTML =
                                '<img src="<?=  /* @noEscape */ $errorImg ?>"><span>' +
                                json.error + '</span>';
                            span.id = 'id-' + id;
                            updateRow.parentNode.insertBefore(span, updateRow);
                        } else {
                            var errorMessage = {
                                'status': true,
                                'errors': ''
                            };
                            if (json.hasOwnProperty('error')) {
                                errorMessage = parseErrors(json.messages);
                                var heading = '<span>' +
                                    '<img src="<?= /* @noEscape */$errorImg ?>"> Errors in product validation.</span>';
                                if (errorMessage.status === false && json.hasOwnProperty('count')) {
                                    heading = '<img src="<?=/* @noEscape */ $successImg ?>"><span>' +
                                        json.count + ' Product(s) Validated successfully</span>';
                                }

                                var errorTemplate = '<div class="batch-container">' +
                                    '<div data-role="collapsible" style="cursor: pointer;">' +
                                    '<div data-role="trigger">' + heading + '</div></div>' +
                                    '<div data-role="content">' + errorMessage.errors + '</div></div>';
                            }
                            span.innerHTML = errorTemplate;
                            span.id = 'id-' + id;
                            updateRow.parentNode.insertBefore(span, updateRow);
                            $(".batch-container").accordion({collapsible: true, active: false});
                        }
                    },

                    error: function () {
                        id++;
                        var span = document.createElement('li');
                        span.innerHTML = '<img src="<?= /* @noEscape */$errorImg ?>"><span>Something went wrong</span>';
                        span.id = 'id-' + id;
                        updateRow.parentNode.insertBefore(span, updateRow);

                    },

                    complete: function () {
                        $("#connectbase-progress-bar").LineProgressbar({
                            percentage: parseInt(((id) / totalRecords) * 100),
                            fillBackgroundColor: '#77a21b',
                            height: '35px',
                            progressBarWidth: progressedPercentage
                        });

                        if (id < totalRecords) {
                            sendRequest();
                        } else {
                            statusImage.src = '<?=  /* @noEscape */ $successImg ?>';
                            var span = document.createElement('li');
                            span.innerHTML =
                                '<img src="<?=  /* @noEscape */ $successImg ?>">' +
                                '<span id="updateStatus">' +
                                totalRecords + ' attribute batch(s) successfully processed. Auto Redirect in 5 sec'
                                + '</span>';
                            liFinished.parentNode.insertBefore(span, liFinished);
                            document.getElementById("liFinished").style.display = "block";
                            updateStatus.innerHTML = (id) + ' of ' + totalRecords + ' Processed.';
                            window.setTimeout(function(){
                                window.location.href = "<?= /* @noEscape */$baseUrl;?>";
                            }, 5000);
                        }

                    },
                    dataType: "json"
                });

            }

            function parseErrors(errors) {
                var data = (errors);
                var result = {
                    'status': true,
                    'errors': ''
                };
                if (data) {
                    result.errors = '<table class="data-grid" style="margin-bottom:10px; margin-top:10px"><tr>' +
                        '<th style="padding:15px">Sl. No.</th>' +
                        '<th style="padding:15px">Sku</th>' +
                        '<th style="padding:15px">Errors</th></tr>';
                    var products = Object.keys(data).length;
                    var counter = 0;
                    $.each(data, function (index, value) {
                        var messages = '';
                        $.each(value.errors, function (i, v) {
                            if (typeof v === 'object' && v !== null && Object.keys(v).length > 0) {
                                messages += '<ul style="list-style: none;">';
                                $.each(v, function (attribute, err) {
                                    messages += '<li><b>' + attribute + '</b> : ' + err + '</li>';
                                });
                                messages += '</ul>';
                            }
                        });

                        if (messages === '') {
                            counter++;
                            messages = '<b style="color:forestgreen;">No errors.</b>';
                        }
                        if (!value['Field']) {
                            value['Field'] = value['SellerSku'];
                        }
                        result.errors += '<tr><td>' + (value['Field']) + '</td><td>' + (value['SellerSku'])
                            + '</td><td>' + (value['Message']) + '</td></tr>';
                    });
                    result.errors += '</table>';
                    if (products === counter) {
                        result.status = false;
                    }
                }
                return result;
            }

            function getPercent() {
                return Math.ceil(((id + 1) / totalRecords) * 1000) / 10;
            }
        }
    );</script>