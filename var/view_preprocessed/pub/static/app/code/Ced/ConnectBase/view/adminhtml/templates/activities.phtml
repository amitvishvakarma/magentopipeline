<?php /** * CedCommerce * * NOTICE OF LICENSE * * This source file is subject to the End User License Agreement (EULA) * that is bundled with this package in the file LICENSE.txt. * It is also available through the world-wide-web at this URL: * https://cedcommerce.com/license-agreement.txt * * @category Ced * @package Ced_ConnectBase * @author CedCommerce Core Team <connect@cedcommerce.com> * @copyright Copyright CedCommerce (https://cedcommerce.com/) * @license https://cedcommerce.com/license-agreement.txt */ use Ced\ConnectBase\Block\Adminhtml\Activities; /** @var Activities $block */ $successImage = $block->getViewFileUrl('Ced_ConnectBase::images/circle_check.svg'); $errorImage = $block->getViewFileUrl('Ced_ConnectBase::images/circle_xmark.svg'); $allQueuedTask = $block->getAllQueuedTask(); $currentActivity = $block->getCurrentActivity(); $tag = ($currentActivity == 'recent') ? 2 : 1; $currentMarketplaceId = $block->getCurrentMarketplaceId(); ?> <?php if (!empty($allQueuedTask)) { ?> <div class="ced-ongoing-activities"><ul class="ced-list-group ced-list-group-flush"><li class="ced-list-group-item"><span><?= /* @noEscape */ _('Ongoing Activities')?></span></li> <?php foreach ($allQueuedTask as $queue) { ?> <li class="ced-list-group-item"><div class="ced-item-row"><div class="ced-item-column ced-item-column-ongoing"><span id="message-<?= /* @noEscape */ $queue['_id']['$oid']; ?>" class="ced-activity-title"><?= /* @noEscape */ _($queue['message'] ?? NULL) ?></span> <span class="ced-activity-subtitle"><?= /* @noEscape */ $queue['updated_at'] ?? $queue['created_at'] ?? NULL ?></span> <progress id="<?= /* @noEscape */ $queue['_id']['$oid']; ?>" class="ced-progress" value="0" max="100"></progress></div></div></li> <?php } ?></ul></div><?php } ?> <div class="ced-completed-activities"><ul id="ced-notifications-list" class="ced-list-group ced-list-group-flush"><li class="ced-list-group-item ced-list-group-item-title"><span><?= /* @noEscape */ $currentActivity == 'realtime' ? _('Realtime Activities') : _('Completed Activities')?></span></li></ul></div><!-- pagination elements --><div class="admin__data-grid-pager-wrap ced-pagination"><div class="admin__data-grid-pager"><button id="cedPrevPage" class="action-previous" type="button" title="Previous Page"></button> <label for="ced-page-input"></label> <input id="cedCurrentPage" class="admin__control-text" type="number" value="1"><label class="admin__control-support-text" for="42">of <span id="cedTotalPages">0</span></label> <button id="cedNextPage" class="action-next" type="button" title="Next Page"></button></div></div><script>
    require([
            'jquery',
            'jquery/ui',
        ],
        function ($) {
            $(document).ready(function () {
                const pageSize = 20;
                let currentPage = $('#cedCurrentPage').val();
                let activity = '<?= /* @noEscape */ $currentActivity ?>';
                sendAjax(parseInt(currentPage), pageSize);
                if (activity == 'recent') {
                    getQueuedTask();
                }

                $('#cedNextPage').on('click', function () {
                    currentPage = parseInt($('#cedCurrentPage').val()) + 1;
                    sendAjax(parseInt(currentPage), pageSize);
                });

                $('#cedPrevPage').on('click', function () {
                    currentPage = parseInt($('#cedCurrentPage').val()) - 1;
                    sendAjax(parseInt(currentPage), pageSize);
                });
            });

            function sendAjax(currentPage, pageSize) {
                $.ajax({
                    type: "POST",
                    url: "<?= /* @noEscape */$block->getAjaxUrl();?>",
                    data: {
                        tag: "<?= /* @noEscape */ $tag ?>",
                        current_page: currentPage,
                        page_size: pageSize,
                        marketplace_id: "<?= /* @noEscape */ $currentMarketplaceId; ?>",
                        form_key: window.FORM_KEY
                    },
                    dataType: "json",
                    success: function (response) {
                        $('li.ced-list-group-item-item').remove();
                        $('#ced-notifications-list').append(prepareNotificationHtml(response));
                        updatePagination(parseInt(response.count), pageSize, currentPage)
                    },
                    error: function () {

                    }
                });
            }

            function getQueuedTask() {
                $.ajax({
                    type: "POST",
                    url: "<?= /* @noEscape */$block->getQueuedTaskUrl();?>",
                    data: {
                        marketplace_id: "<?= /* @noEscape */ $currentMarketplaceId; ?>",
                        form_key: window.FORM_KEY
                    },
                    dataType: "json",
                    success: function (response) {
                        let flag = false;
                        $.each(response.rows, function (index, element) {
                            let id = element._id.$oid
                            $('#'+id).val(element.progress);
                            $('#message'+id).html(element.message);
                            if (parseInt(element.progress) < 100) {
                                flag = true;
                            }
                        });
                        if (response.count == 0) {
                            flag = false;
                            $.each($('.ced-progress'), function (index, element) {
                                $(element).val(100)
                            });
                        }
                        if (flag) {
                            setTimeout(getQueuedTask, 5000);
                        }
                    },
                    error: function () {
                        setTimeout(getQueuedTask, 3000);
                    }
                });
            }

            function prepareNotificationHtml(notifications) {
                let html = '';
                if (notifications.rows) {
                    $.each(notifications.rows, function (index, element) {
                        html += '<li class="ced-list-group-item ced-list-group-item-item">';
                        html += '<div class="ced-item-row">';
                        if (element.severity === 'success') {
                            html += '<div class="ced-item-column">';
                            html += '<img class="ced-image-icon" src="<?= /* @noEscape */ $successImage; ?>" alt="">'
                            html += '</div>';
                        } else {
                            html += '<div class="ced-item-column">';
                            html += '<img class="ced-image-icon" src="<?= /* @noEscape */ $errorImage; ?>" alt="">'
                            html += '</div>';
                        }
                        html += '<div class="ced-item-column">';
                        html += '<span class="ced-activity-title">' + element.message + '</span>'
                        html += '<span class="ced-activity-subtitle">' + element.created_at + '</span>'
                        html += '</div></div></li>'
                    });
                } else {
                    html += '<li class="ced-list-group-item ced-list-group-item-item">';
                    html += '<div class="ced-item-row"><div class="ced-item-column">';
                    html += '<span class="ced-activity-title">No activity found!</span></div></div></li>';
                }
                return html;
            }

            function updatePagination(totalCount, pageSize, currentPage) {
                if (!$.isNumeric(totalCount)) {
                    totalCount = 1;
                }
                let totalPages = Math.floor(totalCount / pageSize) + (totalCount % pageSize);
                $('#cedTotalPages').text(totalPages);
                $('#cedCurrentPage').text(currentPage);
                $('#cedCurrentPage').val(currentPage);

                if (currentPage === totalPages) {
                    $('#cedNextPage').attr('disabled','disabled');
                }
                if (totalPages > currentPage) {
                    $('#cedNextPage').removeAttr('disabled');
                }
                if (currentPage === 1) {
                    $('#cedPrevPage').attr('disabled','disabled');
                }
                if (currentPage > 1) {
                    $('#cedPrevPage').removeAttr('disabled');
                }
            }
        })</script><style> .ced-completed-activities { position: relative; padding: 1rem; margin: 2rem -0.75rem 0; border: solid #dee2e6; border-width: 1px 0 0; box-shadow: 4px 4px 8px 4px rgba(0, 0, 0, 0.1); } @media (min-width: 576px) .ced-completed-activities { padding: 1.5rem; margin-right: 0; margin-left: 0; border-width: 1px; border-top-left-radius: 0.25rem; border-top-right-radius: 0.25rem; box-shadow: 4px 4px 8px 4px rgba(0, 0, 0, 0.1); } .ced-ongoing-activities { position: relative; padding: 1rem; margin: 1rem -0.75rem 0; box-shadow: 4px 4px 8px 4px rgba(0, 0, 0, 0.1); } @media (min-width: 576px) .ced-ongoing-activities { padding: 1.5rem; margin-right: 0; margin-left: 0; box-shadow: 4px 4px 8px 4px rgba(0, 0, 0, 0.1); } .ced-list-group { display: flex; flex-direction: column; padding-left: 0; margin-bottom: 0; border-radius: 0.25rem; } .ced-list-group-flush>.ced-list-group-item { border-width: 0 0 1px; } .ced-list-group-item:first-child { border-top-left-radius: inherit; border-top-right-radius: inherit; line-height: 1.2; font-size: 2rem; margin-bottom: 1.6rem; border: 0; font-weight: bold; } .ced-list-group-item { position: relative; display: block; padding: 0.5rem 1rem; color: #212529; text-decoration: none; background-color: #fff; } .ced-image-icon { vertical-align: middle; max-width: 4rem; } .ced-item-column { float: left; padding: 0.5rem; } .ced-item-row:after { display: table; clear: both; } .ced-item-column span { display: grid; margin: 5px; } .ced-item-column span:first-child { font-size: 1.6rem; font-weight: 600; } progress { border-radius: 7px; width: 100%; height: 20px; box-shadow: 1px 1px 4px rgba( 0, 0, 0, 0.1 ); } progress::-webkit-progress-bar { border-radius: 0.02rem; background-color: #2222; } progress::-webkit-progress-value { background-color: green; border-radius: 0.1rem; } .ced-item-column-ongoing { width: 100%; } #ced-activity-progress { margin: 5px; } .ced-pagination { padding: 2rem; }</style>